----------------------------------------------------------------------------------------------------------------------------
Binary Pattern
Problem statement
Print the following pattern for the given number of rows.

Pattern for N = 4
1111
000
11
0
Input format : N (Total no. of rows)

Output format : Pattern in N lines

Code:
n = int(input())
i = n
if i%2 == 0:
    while(i>=1):
        j=1
        while(j<=i):
            if i%2 == 1:
                print("0",end="")
            elif i%2==0:
                print("1", end="")
            j+=1
        print()
        i-=1
else:
    while(i>=1):
        j=1
        while(j<=i):
            if i%2 == 1:
                print("1",end="")
            elif i%2==0:
                print("0", end="")
            j+=1
        print()
        i-=1
----------------------------------------------------------------------------------------------------------------------------
Print number PyramidProblem statement
Print the following pattern for a given n.

For eg. N = 6
123456
  23456
    3456
      456
        56
          6
        56
      456
    3456
  23456
123456

Code:
n = int(input())
i = 1
r = (n*2)-1
space = 0
while(i<=r//2+1):
    j = 1
    k=1
    m = 1+space
    while(k<=space):
        print(" ",end="")
        k+=1
    while(m<=n):
        print(m, end="")
        m+=1
    space+=1
    print()
    i+=1

a = 1
space -=2
while(a<=r//2):
    val = n-a
    l = 1
    while(l<=space):
        print(" ",end="")
        l+=1
    while(val<=n):
        print(val,end="")
        val+=1
    print()
    a+=1
    space-=1
----------------------------------------------------------------------------------------------------------------------------
Diamond of star
Problem statement
Print the following pattern for the given number of rows.
  *
 ***
*****
 ***
  *

Note: N is always odd.
Pattern for N = 5

Code:
n = int(input())
f = (n+1)//2
s = n//2
r = 1
while(r<=f):
    space = 1
    while(space<=(f-r)):
        print(" ",end="")
        space+=1
    c = 1
    while(c<=(2*r)-1):
        print("*",end="")
        c+=1
    print()
    r+=1
r = s
while(r>=1):
    space = 1
    while(space<=(s-r)+1):
        print(" ",end="")
        space+=1
    c = 1
    while(c<=(2*r)-1):
        print("*",end="")
        c+=1
    print()
    r-=1
----------------------------------------------------------------------------------------------------------------------------
Rectangular number
Problem statement
Print the following pattern for the given number of rows.

Pattern for N = 4
4444444
4333334
4322234
4321234
4322234
4333334  
4444444
Input format : N (Total no. of rows)

Output format : Pattern in N lines

Code:
n = int(input())
for i in range(1,n+1,1):

    for a in range(1,i,1):
        print(n-a+1,end="")

    for b in range(i,2*n-i+1,1):
        print(n-i+1,end="")

    for c in range(2*n-i, 2*n-1,1):
        print(c-n+2,end="")

    print()

for i in range(n-1,0,-1):

    for x in range(1,i,1):
        print(n-x+1,end="")

    for y in range(i,2*n-i+1, 1):
        print(n-i+1,end="")

    for z in range(2*n-i,2*n-1,1):
        print(z-n+2,end="")

    print()
----------------------------------------------------------------------------------------------------------------------------
Print the patternProblem statement
Print the following pattern for the given number of rows.

Pattern for N = 5
 1    2   3    4   5
 11   12  13   14  15
 21   22  23   24  25
 16   17  18   19  20
 6    7    8   9   10
Input format : N (Total no. of rows)

Output format : Pattern in N lines

Code:
n = int(input())
if n%2==0 or n == 1:
    e = 0
    o = 0
    i = 1
    while(i<=n):
        if i%2==0:
            e+=1
        else:
            o+=1
        i+=1
    #odd part
    start = 1
    end = n
    j = 1
    while(j<=o):
        while(start<=end):
            print(start, end=" ")
            start+=1
        print()
        j+=1
        start = end+n+1
        end = start+n-1

    #even part
    start = start - n
    end =start+n-1
    k = 1
    while(k<=e):
        while(start<=end):
            print(start, end=" ")
            start+=1
        print()
        k+=1
        start = start-(n*3)
        end =start+n-1

else:
    e = 0
    o = 0
    i = 1
    while(i<=n):
        if i%2==0:
            e+=1
        else:
            o+=1
        i+=1
    #odd part
    start = 1
    end = n
    j = 1
    while(j<=o):
        while(start<=end):
            print(start, end=" ")
            start+=1
        print()
        j+=1
        start = end+n+1
        end = start+n-1

    #even part
    start = start - (n*3)
    end =start+n-1
    k = 1
    while(k<=e):
        while(start<=end):
            print(start, end=" ")
            start+=1
        print()
        k+=1
        start = start-(n*3)
        end =start+n-1
----------------------------------------------------------------------------------------------------------------------------
