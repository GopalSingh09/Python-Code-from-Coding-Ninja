----------------------------------------------------------------------------------------------------------------------------
Fahrenheit to celsius 
Problem statement
Given three values - Start Fahrenheit Value (S), End Fahrenheit value (E) and Step Size (W), you need to convert all Fahrenheit values from Start to End at the gap of W, into their corresponding Celsius values and print the table.
Note:
You don't have to write the main function or take input. It has already been taken care of and you need to just print the integer value . Just write the code that prints Fahrenheit to Celsius table in the function itself.
Formula is C = (F - 32) * 5/9

Code:
def printTable(start,end,step):
	for i in range(start,end,step):
		f = int((i-32)*(5/9))
		print(i, end="\t")
		print(f)
	 

	   
s = int(input())
e = int(input())
step = int(input())
printTable(s,e,step)

----------------------------------------------------------------------------------------------------------------------------
Fibonacci member
Problem statement
Create a function that determines whether a given number N belongs to the Fibonacci sequence. If N is found in the Fibonacci sequence, the function should return true; otherwise, it should return false.

Code:

def checkMember(n):
    a = 0
    b = 1
    if n == 0:
        return True
    for i in range(n):
        f = a+b
        a = b
        b = f
        if f == n:
            break
    if f == n:
        return True
    else:
        return False    

n=int(input())
if(checkMember(n)):
    print("true")
else:
    print("false")
----------------------------------------------------------------------------------------------------------------------------
Palindrome number
Problem statement
Check whether a given number ’n’ is a palindrome number.

Note :
Palindrome numbers are the numbers that don't change when reversed.
You don’t need to print anything. Just implement the given function.
Example:
Input: 'n' = 51415
Output: true
Explanation: On reversing, 51415 gives 51415.

Code:
a = int(input())
n = a
rev = 0
while(n!=0):
    d = n%10
    rev = rev*10+d
    n//=10
if a == rev:
    print("true")
else:
    print("false")

----------------------------------------------------------------------------------------------------------------------------
Check Armstrong
Problem statement
You are given an integer 'n'. Return 'true' if 'n' is an Armstrong number, and 'false' otherwise.


An Armstrong number is a number (with 'k' digits) such that the sum of its digits raised to 'kth' power is equal to the number itself. For example, 371 is an Armstrong number because 3^3 + 7^3 + 1^3 = 371.

Code:
n = int(input())
a = n
b = n
rev = 0
count = 0
while(a!=0):
    d = a%10
    rev = rev*10+d
    a//=10
    count+=1

sum = 0
r = 0
while(b!=0):
    d = b%10
    r = rev*10+d
    b//=10
    sum = sum+(d**count)
if n == sum:
    print("true")
else:
    print("false")
----------------------------------------------------------------------------------------------------------------------------
